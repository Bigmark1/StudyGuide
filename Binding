 *****View Binding*******
/// Add build features to the module build.gradle file. 
******************************************************

buildFeatures {
        viewBinding =true
    }
*************************************
//to have layout files ignored while building binding classes include **** tools:viewBindingIgnore="true" ***** to the layout you wish to ignore. 

/// when view binding is enabled, a binding class is enabled for each XML layout file. 
//Each binding class contains references to the root view and all views that have an ID.

///Binding classes are generated by converting the name of the XML layout file to Pascal case and adding the word "Binding" to the end. 

///you reference the binding xml layout class by adding Binding at the end of the class. For example, result_profile.xml becomes ResultProfileBinding. 

/// every binding class contains a getRoot() method, which provides a direct reference for the root view. 

******************SET UP AN INSTANCE OF A BINDING CLASS*****************************

/// 1) Call inflate() method included in the generated binding class. This creates the instance of the binding class for the activity use. 
///2) Get the root view by either calling getRoot() method or using Kotlin property syntax. 
///3) Pass the root view to setContentView() to make it the active view on the screen. 
****EXAMPLE******

private latenit var binding: ResultProfileBinding // ****** creates an instance of the binding class. ResultProfileBinding came from the xml layout class file result_profile.xml.

override fun onCreate(savedInstanceState: Bundle?){
  super.onCreate(savedInstanceState)
  binding = ResultProfileBinding.inflate(layoutInflater) 
setContentView(binding.root)


}
